{"_total":85,"_totalPage":9,"_page":2,"posts":[{"tags":[{"name":"Gulp","permalink":"http://lingyu.wang/tags/Gulp/","url":"/async/tags/Gulp.json","count":2},{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":40},{"name":"NodeJs","permalink":"http://lingyu.wang/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14}],"categories":[{"name":"翻译","permalink":"http://lingyu.wang/categories/翻译/","url":"/async/categories/翻译.json","count":11}],"url":"/async/posts/2014/10/07/getting-gulpy.json","date":1412611200000,"path":{"year":2014,"month":10,"day":7,"name":"getting-gulpy"},"subtitle":"Getting gulpy -- Advanced tips for using gulp.js","title":"Gulp思维 —— Gulp高级技巧","permalink":"http://lingyu.wang/2014/10/07/getting-gulpy/","content":"<p><strong>本文翻译自<a href=\"https://medium.com/@webprolific/getting-gulpy-a2010c13d3d5\">Getting gulpy — Advanced tips for using gulp.js</a></strong></p>\n<p>感受过<a href=\"http://gulpjs.com/\">gulp.js</a>带来的兴奋过后，你需要的不仅仅是它的光鲜，而是切切实实的实例。这篇文章讨论了一些使用gulp.js时常踩的坑，以及一些更加高级和定制化的插件和流的使用技巧。</p>"},{"tags":[{"name":"Gulp","permalink":"http://lingyu.wang/tags/Gulp/","url":"/async/tags/Gulp.json","count":2},{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":40},{"name":"NodeJs","permalink":"http://lingyu.wang/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14}],"categories":[{"name":"翻译","permalink":"http://lingyu.wang/categories/翻译/","url":"/async/categories/翻译.json","count":11}],"url":"/async/posts/2014/10/06/gulp-vision-history-future.json","date":1412524800000,"path":{"year":2014,"month":10,"day":6,"name":"gulp-vision-history-future"},"subtitle":"The vision, history, and future of the project","title":"Gulp -- 项目的愿景、过去和将来","permalink":"http://lingyu.wang/2014/10/06/gulp-vision-history-future/","content":"<p><strong>本文翻译自<a href=\"https://medium.com/@contrahacks/gulp-3828e8126466\">gulp — The vision, history, and future of the project</a></strong></p>\n<p>gulp是一个将vinyl、vinyl-fs、orchestrator、命令行工具以及一系列用于帮助开发者构建优秀插件的指导方针等集于一身的小巧构建工具。尽管它功能很少，但它却完全打破了构建工具生态体系，并通过许多优秀的项目掀起了一股改革你的工作流程的浪潮。</p>"},{"tags":[{"name":"ES6","permalink":"http://lingyu.wang/tags/ES6/","url":"/async/tags/ES6.json","count":2},{"name":"NodeJs","permalink":"http://lingyu.wang/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14},{"name":"koa","permalink":"http://lingyu.wang/tags/koa/","url":"/async/tags/koa.json","count":1}],"categories":[{"name":"NodeJs","permalink":"http://lingyu.wang/categories/NodeJs/","url":"/async/categories/NodeJs.json","count":3}],"url":"/async/posts/2014/09/24/koa-anywhere.json","date":1411488000000,"path":{"year":2014,"month":9,"day":24,"name":"koa-anywhere"},"subtitle":"通过一条命令，将当前目录变成一个静态文件服务器","title":"koa-anywhere","permalink":"http://lingyu.wang/2014/09/24/koa-anywhere/","content":"<p>最近写了一个快速启动静态文件服务器的NodeJs包<a href=\"https://github.com/LingyuCoder/koa-anywhere\">koa-anywhere</a>，可以通过一条命令快速的启动静态文件服务器，而且支持多级目录。目前已经发到了NPM上了</p>"},{"tags":[{"name":"CSS","permalink":"http://lingyu.wang/tags/CSS/","url":"/async/tags/CSS.json","count":35},{"name":"HTML","permalink":"http://lingyu.wang/tags/HTML/","url":"/async/tags/HTML.json","count":29},{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":40},{"name":"思考","permalink":"http://lingyu.wang/tags/思考/","url":"/async/tags/思考.json","count":3}],"categories":[{"name":"思考总结","permalink":"http://lingyu.wang/categories/思考总结/","url":"/async/categories/思考总结.json","count":7}],"url":"/async/posts/2014/09/22/learn-fe.json","date":1411315200000,"path":{"year":2014,"month":9,"day":22,"name":"learn-fe"},"subtitle":"一些总结","title":"学前端的一点总结","permalink":"http://lingyu.wang/2014/09/22/learn-fe/","content":"<p>最近<a href=\"https://github.com/qiu-deqing\">Qiu</a>开了一个<a href=\"https://github.com/qiu-deqing/FE-learning/blob/master/README.md\">FE学习经验介绍</a>，并邀请我去写一点东西。感觉这种方式很有意思，趁着闲下来了，就随便扯了一些，希望能帮到想学前端的同学。我自己只是个前端初学者，希望能有更多的前端爱好者一同学习探讨~~</p>"},{"tags":[{"name":"ES6","permalink":"http://lingyu.wang/tags/ES6/","url":"/async/tags/ES6.json","count":2},{"name":"Generator","permalink":"http://lingyu.wang/tags/Generator/","url":"/async/tags/Generator.json","count":1},{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":40},{"name":"NodeJs","permalink":"http://lingyu.wang/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14}],"categories":[{"name":"NodeJs","permalink":"http://lingyu.wang/categories/NodeJs/","url":"/async/categories/NodeJs.json","count":3}],"url":"/async/posts/2014/07/29/generator.json","date":1406563200000,"path":{"year":2014,"month":7,"day":29,"name":"generator"},"subtitle":"剖析Generator的本质","title":"细说Generator","permalink":"http://lingyu.wang/2014/07/29/generator/","content":"<p>好久没写东西了，今天看了下ES6的Generator的相关知识，在这里记录一下。主要内容翻译自规范，并加入了自己的理解和总结</p>"},{"tags":[{"name":"CSS","permalink":"http://lingyu.wang/tags/CSS/","url":"/async/tags/CSS.json","count":35},{"name":"HTML","permalink":"http://lingyu.wang/tags/HTML/","url":"/async/tags/HTML.json","count":29},{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":40},{"name":"Kissy","permalink":"http://lingyu.wang/tags/Kissy/","url":"/async/tags/Kissy.json","count":1},{"name":"动画","permalink":"http://lingyu.wang/tags/动画/","url":"/async/tags/动画.json","count":2}],"categories":[{"name":"前端综合","permalink":"http://lingyu.wang/categories/前端综合/","url":"/async/categories/前端综合.json","count":6}],"url":"/async/posts/2014/05/31/kissy-anime-plugin.json","date":1401465600000,"path":{"year":2014,"month":5,"day":31,"name":"kissy-anime-plugin"},"subtitle":"一个小作业","title":"如何写一个KISSY动画插件","permalink":"http://lingyu.wang/2014/05/31/kissy-anime-plugin/","content":"<p>最近写东西写的比较少，并不代表我一直在划水。之前阿里的前辈布置了三个作业，其中一个就是基于KISSY写一个动画插件。事实上，KISSY已经有自己的动画模块，叫做<a href=\"http://docs.kissyui.com/1.4/docs/html/api/anim/index.html\">anim</a>，这里前辈的意思就是让我再造一个轮子，<a href=\"http://lingyucoder.github.io/kissy-anime-plugin/\">DEMO页面</a>，<a href=\"https://github.com/LingyuCoder/kissy-anime-plugin\">Github页面</a></p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":40},{"name":"NodeJs","permalink":"http://lingyu.wang/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14},{"name":"WebIM","permalink":"http://lingyu.wang/tags/WebIM/","url":"/async/tags/WebIM.json","count":9},{"name":"WebRTC","permalink":"http://lingyu.wang/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":8},{"name":"WebSocket","permalink":"http://lingyu.wang/tags/WebSocket/","url":"/async/tags/WebSocket.json","count":8}],"categories":[{"name":"即时通信","permalink":"http://lingyu.wang/categories/即时通信/","url":"/async/categories/即时通信.json","count":9}],"url":"/async/posts/2014/05/22/webrtc-data-channels.json","date":1400688000000,"path":{"year":2014,"month":5,"day":22,"name":"webrtc-data-channels"},"subtitle":"使用WebRTC的数据通道实现高效的数据传输","title":"WebRTC的RTCDataChannel","permalink":"http://lingyu.wang/2014/05/22/webrtc-data-channels/","content":"<p>在两个浏览器中，为聊天、游戏、或是文件传输等需求发送信息是十分复杂的。通常情况下，我们需要建立一台服务器来转发数据，当然规模比较大的情况下，会扩展成多个数据中心。这种情况下很容易出现很高的延迟，同时难以保证数据的私密性。</p>\n<p>这些问题可以通过WebRTC提供的RTCDataChannel API来解决，他能直接在点对点之间传输数据。这篇文章将介绍如何创建并使用数据通道，并提供了一些网络上常见的用例</p>"},{"tags":[{"name":"CSS","permalink":"http://lingyu.wang/tags/CSS/","url":"/async/tags/CSS.json","count":35},{"name":"HTML","permalink":"http://lingyu.wang/tags/HTML/","url":"/async/tags/HTML.json","count":29}],"categories":[{"name":"翻译","permalink":"http://lingyu.wang/categories/翻译/","url":"/async/categories/翻译.json","count":11}],"url":"/async/posts/2014/05/21/google-adding-interactivity-with-javaScript.json","date":1400601600000,"path":{"year":2014,"month":5,"day":21,"name":"google-adding-interactivity-with-javaScript"},"subtitle":"翻译自谷歌Web开发最佳实践手册","title":"通过JavaScript增加交互性","permalink":"http://lingyu.wang/2014/05/21/google-adding-interactivity-with-javaScript/","content":"<p>JavaScript允许我们网页中的几乎所有的部分：网页内容、样式等等，它还能提供用户交互的行为。然而，JavaScript也会在页面被渲染时阻塞和延迟DOM树的构建。保证JavaScript代码的异步性，删除不必要的JavaScript代码，可以优化性能。</p>"},{"tags":[{"name":"CSS","permalink":"http://lingyu.wang/tags/CSS/","url":"/async/tags/CSS.json","count":35},{"name":"HTML","permalink":"http://lingyu.wang/tags/HTML/","url":"/async/tags/HTML.json","count":29}],"categories":[{"name":"翻译","permalink":"http://lingyu.wang/categories/翻译/","url":"/async/categories/翻译.json","count":11}],"url":"/async/posts/2014/05/21/google-render-blocking-css.json","date":1400601600000,"path":{"year":2014,"month":5,"day":21,"name":"google-render-blocking-css"},"subtitle":"翻译自谷歌Web开发最佳实践手册","title":"CSS的渲染阻塞","permalink":"http://lingyu.wang/2014/05/21/google-render-blocking-css/","content":"<p>默认情况下，CSS会被看做是渲染阻塞资源，也就是说，浏览器在CSSOM建立前，已经处理过的网页内容不会被显示到页面上。所以，保证你的CSS代码能够快速从服务器获取且尽可能的简短，并注意使用媒体类型（media types）和媒体查询（media queries）去进行非阻塞的渲染。</p>"},{"tags":[{"name":"CSS","permalink":"http://lingyu.wang/tags/CSS/","url":"/async/tags/CSS.json","count":35},{"name":"HTML","permalink":"http://lingyu.wang/tags/HTML/","url":"/async/tags/HTML.json","count":29}],"categories":[{"name":"翻译","permalink":"http://lingyu.wang/categories/翻译/","url":"/async/categories/翻译.json","count":11}],"url":"/async/posts/2014/05/21/google-measuring-the-critical-rendering-path-with-navigation-timing.json","date":1400601600000,"path":{"year":2014,"month":5,"day":21,"name":"google-measuring-the-critical-rendering-path-with-navigation-timing"},"subtitle":"翻译自谷歌Web开发最佳实践手册","title":"使用导航计时监测渲染关键路径","permalink":"http://lingyu.wang/2014/05/21/google-measuring-the-critical-rendering-path-with-navigation-timing/","content":"<p>没办法监测，就没办法优化。幸运的是，浏览器提供了一系列用来监测渲染关键路径上每一步的接口，叫导航计时接口（Navigation Timing API）<br>"}]}